// =========================================
//  Mixins
// =========================================

// Slanted effect
@mixin skewed {
  position: relative;
  &::after {
    content: '';
    display: block;
    width: 100%;
    height: 50px; 
    position: absolute;
    transform: skewY(-2deg);
    @content;
  }
}

// Center containers
@mixin center($w) {
  width: $w;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

//rounded elements
@mixin rounded($dim, $brdr: null){
  width: $dim;
  height: $dim;
  border: $brdr;
  border-radius: 50%;
}

//create a flex container
@mixin flexIt(
$disp: flex, 
$direc: null, 
$wrap: null, 
$just:null){
  display: $disp;
  flex-direction: $direc;
  flex-wrap: $wrap;
  justify-content: $just;
}

// Media queries
@mixin mediaQ($break) {  
  $value: map-get($breakpoints, $break);
  $sm: map-get($breakpoints, 'sm');            
            
  @if $value < $sm {
    @media (max-width: $value) {
      @content;       
    }          
  }    
  @else {
    @media (min-width: $value) {
      @content;       
    }             
  }  
}

// Icon Colors
@mixin themes($map) {
  @each $i, $color in $map {
    &-#{$i} {
      color: $color;
    }
  } 
}
  // Media queries
//@mixin mediaQ($break) {  
  // @if $break == 'xs'{
  //   @media(max-width: $break-xs){
  //   @content;
  //   }
  // }
  // @else if $break == 'sm'{
  //   @media(min-width: $break-s){
  //     @content;
  //     }
  //   }
  // @else if $break == 'med'{
  //   @media(min-width: $break-m){
  //     @content;
  //     }
  // }
  // @else if $break == 'lg'{
  //   @media(min-width: $break-l){
  //     @content;
  //     }
  //  }            
//}



